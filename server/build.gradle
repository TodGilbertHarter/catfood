/**
 * This software is Copyright (C) 2017 Tod G. Harter. All rights reserved.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * CatFood server project build script: This builds all of CatFood, the
 * CatFood Vert.x server process, and provides tasks which will allow us to
 * fire up an instance in content development mode so we can perform short
 * cycle interactive development in the client project.
 */
group = 'com.giantelectronicbrain'
version = '0.0.1-SNAPSHOT'

buildscript {
	repositories {
	    maven {
	      url "https://plugins.gradle.org/m2/"
	    }
    	jcenter()
        mavenCentral()
	}
	dependencies {
		classpath "gradle.plugin.io.vertx:vertx-gradle-plugin:0.0.6"
	}
}

apply plugin: 'io.vertx.vertx-plugin'
apply plugin: 'eclipse'

repositories {
	jcenter()
    mavenCentral()
	mavenLocal()
}

dependencies {
	compile 'org.apache.logging.log4j:log4j-api:2.+'
	compile 'org.apache.logging.log4j:log4j-core:2.+'
	compile 'io.vertx:vertx-web'
	compile 'io.vertx:vertx-web-templ-freemarker'
	compile 'com.orientechnologies:orientdb-jdbc:2.2.29'
	compile 'com.orientechnologies:orientdb-server:2.2.29'

    testCompile 'junit:junit:4.12'
}

vertx {
	vertxVersion = '3.5.0'
	launcher = 'com.giantelectronicbrain.catfood.CatFood'
	args = ["-c=${rootProject.buildDir}/catfood/conf/reloading.properties".toString(), "-write"]
//	jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=y']
	workDirectory = "${rootProject.buildDir}/catfood"
}

/*vertx {
	vertxVersion = '3.5.0'
	launcher = 'com.giantelectronicbrain.catfood.CatFood'
} */

/* configurations {
	webjars
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	webjars('org.webjars.npm:react-bootstrap:0.31.3') {
		exclude module: 'prop-types-extra' // no idea why this is missing, may actually need it, but at least we can continue this little experiment.
	}
	webjars 'org.webjars.npm:requirejs:2.3.5'
	webjars 'org.webjars.npm:babel-standalone:6.26.0'
	webjars 'org.webjars.npm:react-router-bootstrap:0.24.4'
	webjars 'org.webjars.npm:react-router-dom:4.2.2'
//	webjars 'org.webjars.npm:marked:0.3.6'
	
	compile 'org.apache.logging.log4j:log4j-api:2.+'
	compile 'org.apache.logging.log4j:log4j-core:2.+'
	compile 'io.vertx:vertx-web:3.5.0'
	compile 'io.vertx:vertx-web-templ-freemarker:3.5.0'
	compile 'com.orientechnologies:orientdb-jdbc:2.2.29'
	compile 'com.orientechnologies:orientdb-server:2.2.29'

    testCompile 'junit:junit:4.12'
}

task copySchema(type: Copy) {
	into "$buildDir/catfood/dbscripts"
	from "src/main/schema"
	expand(project.properties)
}

task createDB(type: Exec) {
	commandLine '/bin/bash', "$ORIENTDBHOME/bin/console.sh", "$buildDir/catfood/dbscripts/schema.sql"
}

task copyWebJars(type: Copy) {
	into "$buildDir/catfood/webroot/libs"
	from configurations.webjars
}

task copyJars(type: Copy) {
	into "$buildDir/catfood/libs"
	from configurations.compile
}

task copyWebContent(type: Copy) {
	into "$buildDir/catfood/webroot/"
	from "src/main/web"
}

task copyCatFoodJar(type: Copy) {
	into "$buildDir/catfood/bin"
	from "$buildDir/libs"
}

task copyCatFoodScript(type: Copy) {
	into "$buildDir/catfood/bin"
	from "src/main/shell"
	expand(project.properties)
}

task copyJavascript(type: Copy) {
	into "$buildDir/catfood/javascript"
	from "src/main/javascript"
}

// assemble.dependsOn(copyWebJars)
// assemble.dependsOn(copyWebContent)
copyCatFoodJar.dependsOn(copyJavascript)
copyCatFoodJar.dependsOn(copyJars)
copyCatFoodJar.dependsOn(assemble)
copyCatFoodJar.dependsOn(copyWebJars)
copyCatFoodJar.dependsOn(copyWebContent)
copyCatFoodJar.dependsOn(copyCatFoodScript)
createDB.dependsOn(copySchema)
copyCatFoodJar.dependsOn(createDB)

*/