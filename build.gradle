/**
 * This software is Copyright (C) 2017 Tod G. Harter. All rights reserved.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * CatFood master project build script: This builds all of CatFood, the
 * database, the server, and the HTML client as sub-projects. The output
 * of the sub-projects is then assembled into a final distributable binary
 * package which can be dropped onto any machine with a new enough JRE.
 */

plugins {
	id "fr.brouillard.oss.gradle.jgitver" version "0.10.0-rc03"
}

group = 'com.giantelectronicbrain'
//version = '0.0.1-SNAPSHOT'
def serverBuildDir = project(':server').buildDir
def databaseBuildDir = project(':database').buildDir
ext.clientBuildDir = project(':client').buildDir
def hairballBuildDir = project(':hairball').buildDir
def bucketsBuildDir = project(':buckets').buildDir

apply plugin: 'base'

task copyServerScriptFiles(type: Copy) {
	into "$buildDir/catfood/bin"
	from "$serverBuildDir/scriptsShadow"
}


task copyDatabase(type: Copy) {
	into "$buildDir/catfood/orientdb"
	from "$databaseBuildDir/catfood/orientdb"
	outputs.upToDateWhen { file("$buildDir/catfood/orientdb").exists() }
}

task copyClient(type: Copy) {
	into "$buildDir/catfood/webroot/content"
	from "$clientBuildDir/js"
}

task copyClientTemplates(type: Copy) {
	from "$clientBuildDir/templates"
	into "$buildDir/catfood/webroot/templates"
}

task copyConfiguration(type: Copy) {
	into "$buildDir/catfood/conf"
	from "src/main/resources"
}

task copyWebContent(type: Copy) {
	into "$buildDir/catfood/webroot/content"
	from "$clientBuildDir/content"
}

task copyClientSource(type: Copy) {
	from "client/src/main/java"
	into "$buildDir/catfood/client/src/main/java"
}

task copyClientSourceLibs(type: Copy) {
	from "$clientBuildDir/sourcelibs/org/commonmark"
	into "$buildDir/catfood/client/org/commonmark"
}

// REALLY need to sort out webjars...
task copyWebLibs(type: Copy) {
	into "$buildDir/catfood/webroot/libs"
	from "$clientBuildDir/jslibs"
}

task copyLombok(type: Copy) {
	into "$buildDir/catfood/lib"
	from "$serverBuildDir/dependencies/"
}

task copyServerJar(type: Copy) {
	into "$buildDir/catfood/lib"
	from "$serverBuildDir/libs/server-${version}-all.jar"
}

task buildCatFood(dependsOn: [':core:build', ':buckets:build', ':hairball:build', ':server:build', ':database:buildCatFoodDB', 
		':client:build', 'copyServerScriptFiles', 'copyServerJar', 'copyLombok', 'copyDatabase', 'copyClient',
		'copyClientSource','copyConfiguration', 'copyWebContent', 'copyClientTemplates', 'copyWebLibs' ]) {
//	println "building all of CatFood!"
}

copyWebLibs.dependsOn(':client:copyWebLibs')
copyWebContent.dependsOn(':client:copyWebContent')
//copyClient.dependsOn(':client:FastOptJS')
//copyClient.dependsOn(':client:FullOptJS')
copyClient.dependsOn(':client:build')
copyServerJar.dependsOn(':server:build')
copyServerScriptFiles.dependsOn(':server:build')
copyDatabase.dependsOn(':database:buildCatFoodDB')
copyLombok.dependsOn(':server:build')
//copyClientSourceLibs.dependsOn(':client:copySourceLibs')
copyClientTemplates.dependsOn(':client:copyWebTemplates')

